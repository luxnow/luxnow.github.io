<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>爆爆奢产品技术团队</title>
  <subtitle>爆爆奢 · 产品技术团队</subtitle>
  <id>https://luxnow.github.io/</id>
  <link href="https://luxnow.github.io/"/>
  <link href="https://luxnow.github.io/feed.xml" rel="self"/>
  <updated>2021-07-10T08:00:00+08:00</updated>
  <author>
    <name>上海斐鸿网络科技有限公司</name>
  </author>
  <entry>
    <title>FaaS 开发之道</title>
    <link rel="alternate" href="https://luxnow.github.io/2021-07-10.html"/>
    <id>https://luxnow.github.io/2021-07-10.html</id>
    <published>2021-07-10T08:00:00+08:00</published>
    <updated>2021-07-10T15:11:25+08:00</updated>
    <author>
      <name>朱峰</name>
    </author>
    <content type="html">&lt;p&gt;以前技术与业务之间有着巨大的沟壑，业务有需求时，需要跨部门沟通，先找产品经理，产品经理细化后，再找项目经理进行排期，最后由开发完成上线。&lt;/p&gt;

&lt;p&gt;整个工作流程不仅人员多、时间长，而且流程中任意一个节点失真严重一些，都会导致最终上线质量的不可控。&lt;/p&gt;

&lt;p&gt;并且因为研发系统自身的复杂性，导致整个链路不得不那么长。&lt;/p&gt;

&lt;p&gt;但现在随着基础设施的提升，特别是 FaaS 架构成为了切实可行的架构后，研发系统的复杂性被大幅降低了，开发人员有了更多的精力可以往前走，走近业务。从而缩短​距离，降低失真。&lt;/p&gt;

&lt;p&gt;那作为一个开发人员，该​怎么往前走呢？&lt;/p&gt;

&lt;p&gt;我建议从提升观察能力入手。&lt;/p&gt;

&lt;p&gt;作为一个经常跟抽象概念打交道的开发人员，大脑已经被训练的习惯于​抽象思考，但现实世界是​具象的。并且不仅是具象，还是多维的，且每个维度都是具象的。&lt;/p&gt;

&lt;p&gt;开发人员必须有意识的去观察具象的世界，去追求现实世界的反馈，来避免​在抽象的世界里自嗨。&lt;/p&gt;

&lt;p&gt;比如前阵子仓库的拣货发货效率低，需要优化​。作为开发人员，要如何观察这个事情呢​？&lt;/p&gt;

&lt;p&gt;通常来说，有这几个基本维度需要被观察到​：人员、场地、步骤​。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;人员​：有几个人？​分别是谁？如何分工的​？未来的​人员规划是怎么样的？&lt;/li&gt;
&lt;li&gt;场地：​有几个场地？​分别是哪几个场地？每个场地要做什么事情​？未来场地的规划是怎么样的？&lt;/li&gt;
&lt;li&gt;步骤​：有几个步骤？每个步骤分别需要哪些人员和场地​？步骤之间的交付​是怎么进行的？未来​步骤的规划是怎么样的？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通过观察上面这些问题，可以了解到大致的情况​。如果在这个层面就发现了不少值得优化的地方，那​就可以开始进行初步的优化了。&lt;/p&gt;

&lt;p&gt;但如果要继续精进，就需要更深入的去观察​其中一个或多个维度。&lt;/p&gt;

&lt;p&gt;比如说人员这个维度​：人员的身高​是多少？​步距是多少？工作台和作业场地是否能够让他们快捷的完成工作？等等。&lt;/p&gt;

&lt;p&gt;随着你观察的深入，你会发现越来越多的问题，越来越多的挑战​。&lt;/p&gt;

&lt;p&gt;当你一个个去面对和完成这些挑战时，获得的不仅是现实世界的反馈，还有包括技术能力在内全方面的能力提升。&lt;/p&gt;

&lt;p&gt;其实反过来看，你会发现 FaaS 架构其实也是为了解决研发流程的现实问题而产生的​，因此 FaaS 不仅仅是个技术架构，还是对整个研发流程的优化。&lt;/p&gt;

&lt;p&gt;因此，请牢记​：追求现实世界的反馈，不要在抽象的世界里自嗨。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>为什么 FaaS 系统的复杂性不会随着规模的增长而指数增长？</title>
    <link rel="alternate" href="https://luxnow.github.io/2021-06-26.html"/>
    <id>https://luxnow.github.io/2021-06-26.html</id>
    <published>2021-06-26T08:00:00+08:00</published>
    <updated>2021-07-10T14:47:24+08:00</updated>
    <author>
      <name>朱峰</name>
    </author>
    <content type="html">&lt;p&gt;爆爆奢的后端完全基于 FaaS 架构，支撑了整个企业从前端到后端的业务。&lt;/p&gt;

&lt;p&gt;接下来分几篇文章，跟大家聊聊爆爆奢从 FaaS 架构获得的收益，抛砖引玉以供探讨。&lt;/p&gt;

&lt;p&gt;今天先说 FaaS 在系统复杂性方面的收益​：为什么 FaaS 系统的复杂性不会随着规模的增长而指数增长？&lt;/p&gt;

&lt;p&gt;大部分企业随着规模增长，需要经历从单体应用到微服务的重构历程。&lt;/p&gt;

&lt;p&gt;通过拆分复杂的业务的模块，把一个大型复杂的系统，变成一个个相对简单易维护的小系统。但随着规模的进一步增长，这些初期的小系统，也会逐渐变成庞然大物，然后面临再一次的拆分。&lt;/p&gt;

&lt;p&gt;而 FaaS 是以函数为单位的系统，每个函数只处理一个单一的业务流程，如果业务流程变复杂了，可以原子化的将一个函数扩展成多个函数，每个函数依然只处理一个单一的业务流程。&lt;/p&gt;

&lt;p&gt;随着规模的增长，会沉淀下大量的云函数，但因为云函数部署时会锁定当时的依赖项等信息，因此这些云函数几乎可以永久正常工作而无需运维。&lt;/p&gt;

&lt;p&gt;也就是说，FaaS 开发人员只需专注于增量部分的开发，无需关注存量的维护。&lt;/p&gt;

&lt;p&gt;进一步假设，当增长量是线性稳定的时，那开发的工作量也是稳定的。&lt;/p&gt;

&lt;p&gt;于是同样的开发投入，在 FaaS 架构下可以有持续稳定的产出，而在微服务架构下，产出会随着时间的增长而逐渐下降。&lt;/p&gt;

&lt;p&gt;反过来说，为了得到持续稳定的产出，FaaS 架构只需要持续稳定的投入即可，而微服务则需要不断增加投入。&lt;/p&gt;

&lt;p&gt;更何况随着开发投入的增加，技术管理、人员管理的成本和难度，都会指数级的增加。&lt;/p&gt;

&lt;p&gt;曾经的企业不得不承担这块额外的风险，而在云时代，FaaS 成为了切实可行的基础架构，你跟不跟？&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>程序员如何 10x 成长？（学习资料篇）</title>
    <link rel="alternate" href="https://luxnow.github.io/2021-04-30.html"/>
    <id>https://luxnow.github.io/2021-04-30.html</id>
    <published>2021-04-30T08:00:00+08:00</published>
    <updated>2021-04-30T11:54:04+08:00</updated>
    <author>
      <name>朱峰</name>
    </author>
    <content type="html">&lt;p&gt;五一假期将至，对于想成为 10x 程序员的你来说，必定会抓紧时间，好好学习💪&lt;/p&gt;

&lt;p&gt;下面根据我的经验，分享一些 10x 程序员的学习资料，主要分经典和流行两部分。&lt;/p&gt;

&lt;p&gt;经典是用于帮助你形成专业的工作思维和方法论的，流行是帮助你了解专业领域最新的趋势和新闻。&lt;/p&gt;

&lt;p&gt;两者结合，就可以应对各种工作挑战，成为 10x 程序员😎&lt;/p&gt;

&lt;h3&gt;经典类&lt;/h3&gt;

&lt;p&gt;经典书籍作为必读书，不仅是越早学习越好，而且随着工作经验的增长，每次反复阅读都会有不一样的感悟。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/4199741/"&gt;《代码整洁之道（Clean Code）》&lt;/a&gt; 代码质量与其整洁度成正比。干净的代码，既在质量上较为可靠，也为后期维护、升级奠定了良好基础。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://book.douban.com/subject/26919457/"&gt;《代码整洁之道: 程序员的职业素养（The Clean Coder）》&lt;/a&gt; 成功的程序员在以往的工作和生活中都曾经历过大大小小的不确定性，承受过永无休止的压力。他们之所以能够成功，是因为拥有一个共同点，都深切关注创建软件所需的各项实践。他们将软件开发视为一种需要精雕细琢加以修炼的技艺，他们以专业人士的标准要求自己，他们具有职业素养。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;流行类&lt;/h3&gt;

&lt;p&gt;下面是一些周更的推送，你可以根据自己所在的技术领域，进行订阅：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://css-weekly.com/"&gt;CSS Weekly&lt;/a&gt; 推荐 &lt;strong&gt;前端开发&lt;/strong&gt; 订阅&lt;/li&gt;
&lt;li&gt;&lt;a href="https://responsivedesign.is/"&gt;RWD Weekly&lt;/a&gt; 推荐 &lt;strong&gt;前端开发&lt;/strong&gt; 订阅&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.smashingmagazine.com/the-smashing-newsletter/"&gt;Smashing Newsletter&lt;/a&gt; 推荐 &lt;strong&gt;前端开发&lt;/strong&gt; 订阅&lt;/li&gt;
&lt;li&gt;&lt;a href="https://javascriptweekly.com/"&gt;Javascript Weekly&lt;/a&gt; 推荐 &lt;strong&gt;Javascript 开发&lt;/strong&gt; 订阅&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nodeweekly.com/"&gt;Node Weekly&lt;/a&gt; 推荐 &lt;strong&gt;Node.js 开发&lt;/strong&gt; 订阅&lt;/li&gt;
&lt;li&gt;&lt;a href="https://offbynone.io/"&gt;off-by-none&lt;/a&gt; 推荐 &lt;strong&gt;后端开发&lt;/strong&gt; 订阅，主要内容是 Serverless 和云服务&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dbweekly.com/"&gt;Database Weekly&lt;/a&gt; 推荐 &lt;strong&gt;后端开发&lt;/strong&gt; 订阅&lt;/li&gt;
&lt;li&gt;&lt;a href="https://postgresweekly.com/"&gt;Postgres Weekly&lt;/a&gt; 推荐 &lt;strong&gt;后端开发&lt;/strong&gt; 订阅&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Hello world!</title>
    <link rel="alternate" href="https://luxnow.github.io/2021-04-18.html"/>
    <id>https://luxnow.github.io/2021-04-18.html</id>
    <published>2021-04-18T08:00:00+08:00</published>
    <updated>2021-04-30T10:10:23+08:00</updated>
    <author>
      <name>朱峰</name>
    </author>
    <content type="html">&lt;p&gt;欢迎来到爆爆奢 · 产品技术团队博客！&lt;/p&gt;

&lt;p&gt;接下来我们会这里分享各类我们团队的工作经验和心得。&lt;/p&gt;

&lt;p&gt;如果想加入我们，可以点击 &lt;a href="/jobs.html"&gt;Join Us&lt;/a&gt; 了解我们目前开放的岗位，期待你的互动和加入 :)&lt;/p&gt;
</content>
  </entry>
</feed>
